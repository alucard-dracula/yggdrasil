
1. YGGDRASIL は、私が長年にわたってゲーム開発に携わってきた中でまとめた汎用機能です
2. YGGDRASILには、ネットワーク、ファイル、データベース、一般的なスレッドセーフデータ構造など、ゲームサーバーに必要な基本機能が含まれています

3.機能モジュールには主に次のものが含まれます。
    3.1 server:                     ゲームサーバーのアーキテクチャを実現するために使用します。
    3.2 client:                     ゲームクライアントのアーキテクチャを実現するために使用します。
    3.3 proxy:                      分散ゲームサーバーアーキテクチャを実現するために使用します。
    3.4 file_system:                サーバーファイルの処理を実現するために使用します。
    3.5 database_system:            ODBCを基に開発され、一般的にはEXCELの設定表の変換や異なるデータベース間のデータ変換の開発および保守ツールに使用されますが、
                                    ゲームサーバーのデータベース操作インターフェースとしては推奨されません。
    3.6 nsql_database_system:       mongodb_c_driverを基に開発され、ゲームサーバーのデータベース操作インターフェースとして使用されます。
    3.7 charset:                    ゲームテキスト文字セットを標準化するためのツール。
    3.8 safe_container:             ゲームロジックのスレッドセーフな基本コンテナを実現するために使用します。

4.サードパーティライブラリの説明:
    コンパイル設定、スクリプト、およびサードパーティライブラリのパッチはすべて yggdrasil/tools の下に配置され、2 つのカテゴリに分かれています。詳細については、tools の下の各サブディレクトリを参照してください
    4.1 パッチとコンパイル済みスクリプトを含むプロジェクト:
        このタイプのプロジェクトでは、パッチファイルとコンパイルスクリプト(.bat .shなど)をソースコードの対応するディレクトリにコピーし、スクリプトでコンパイルしてコンパイルし、開発環境にインストールする必要があります
    4.2 IDEで構成されたプロジェクト
        IDE を直接使用してプロジェクトを開き、コンパイルして開発環境にインストールします

5. 互換性に関する注意事項:
    5.1. 言語バージョンの要件:
        必要な最小 C++ 言語バージョンは次のとおりです: C++03
        最低限必要な C 言語バージョン: C98
        サポートされている最高 C++ 言語バージョンは次のとおりです: C++20
    注: さまざまなシステムの最小言語要件には、環境に応じてコンパイラとサードパーティのライブラリが含まれます (たとえば、BOOST 1.85 以降は C++03 はサポートされません)。

5.2. ライブラリのバージョン要件:
    5.2.1. ブースト:
        ライブラリは現在 1.82 までサポートされています。
        yggdrasil.safe_containerはソースハッキング技術を使用して互換性を確保し、マルチスレッド環境でのブーストコンテナの動作を最適化するため、
        したがって、最適化されたバージョンを使用する場合は、yggr/safe_container/detail/boost_container_opt に対応する最適化コードのバージョンがあることを確認する必要があります。
        それ以外の場合は、最適化されていないバージョンのみを使用できます

    5.2.2. mongodb_c_dirver
        このライブラリは現在、1.26.1 までサポートされています。
        mongodb_c_dirver年にわたる頻繁な変更により、バージョン間の互換性は非常に低く、C++03と互換性を持ち、yggdrasilの互換性を確保するためには、
        一部のコードをC98構文で再実装する必要があります。
        したがって、ライブラリはツール (現在は tools/mongodb_c_driver/yggr_src_1.26.1) のマジックバージョンのみをサポートし、
        将来的にはmongodb_c_dirverが安定するまでライブラリの 1 つのバージョンのみをサポートすることが保証されます

    5.2.3. x86
        x86 プラットフォームの場合、YGGDRASIL は各モジュールに対して優れたサポートを提供します

    5.2.4. アーム
        ARM プラットフォームの場合、主な制限はシステム SDK とサードパーティ ライブラリのサポートにあります。
        python
        luajit
        yggdrasil.serialization.bson
        yggdrasil.nsql_database_system
        yggdrasil.log.mongodb
        yggdrasil.file_system
        yggdrasil.segment
        yggdrasil.seh
        これらのライブラリはARMプラットフォームでは完全にサポートされていないため、readme_[system_plafrom].txtの指示に従って使用方法を決定してください

    5.2.5. その他のプラットフォーム
        ユーザーはSDKとサードパーティライブラリのサポートに基づいて、そのプラットフォームがサポートできるかどうかを自分で判断する必要があります。

    6.インストール手順:
        インストール方法の詳細については、INSTALL_XX.txtを参照してください。

        6.1. WINDWOS：
            .bat、.sh(mingw)、 .sln(msvc)、 .workspace(code blacks) のコンパイル方法を提供しました。
        6.2. LINUX：
            .sh(mingw)、 .workspace(code blacks)のコンパイル方法を提供しました。
        6.3. ANDROID:
            .bat、.sh(mingw)、.mk（ndk-build）のコンパイル方法を提供しました。
        6.4. macos：
            .sh CMakelists.txt(cmake)  のコンパイル方法を提供しました。

7.使い方を学ぶ方法:
    yggr_lib_only.slnに含まれる項目以外は、例題とテストコードです。
    ドキュメントの作業量が膨大で、個人の能力が限られているため、例題に基づいて使い方を学んでください。
    STLおよびBOOSTの拡張機能については、使用方法はSTLおよびBOOSTと似ており、STLおよびBOOSTのドキュメントを参照できます。
